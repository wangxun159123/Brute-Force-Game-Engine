cmake_minimum_required(VERSION 2.6)

BFG_INIT_PACKAGE(Controller)

FILE(GLOB Controller_SOURCES *.cpp)
FILE(GLOB Controller_HEADERS *.h *.hh)
FILE(GLOB Controller_SCRIPTS *.xml)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${BoostLog_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OIS_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${TINYXML_INCLUDE_DIR})
INCLUDE_DIRECTORIES(..)

IF(WIN32)
	ADD_DEFINITIONS(-DCONTROLLER_EXPORTS)
ENDIF(WIN32)

ADD_CUSTOM_TARGET (ControllerEnums
	bfgEnumGen --input ${CMAKE_CURRENT_SOURCE_DIR}/Enums.xml
	        --header ${CMAKE_CURRENT_SOURCE_DIR}/Enums.hh
	        --source ${CMAKE_CURRENT_SOURCE_DIR}/Enums.cpp
	DEPENDS bfgEnumGen
)

ADD_DEFINITIONS(-DTIXML_USE_STL)
#ADD_DEFINITIONS(-DCONTROLLER_DEBUG)

ADD_LIBRARY(bfgController SHARED
	${Controller_SOURCES}
	${Controller_HEADERS}
	${Controller_SCRIPTS}
)

SET_TARGET_PROPERTIES(bfgController PROPERTIES OUTPUT_NAME_DEBUG "bfgController_d")

TARGET_LINK_LIBRARIES(bfgController
	bfgEventCore
	bfgCore
	${OIS_LIBRARIES}
	${Boost_LIBRARIES}
	${BoostLog_LIBRARIES}
)

ADD_DEPENDENCIES(bfgController ControllerEnums bfgCore TinyXML)

INSTALL(TARGETS bfgController
	RUNTIME DESTINATION ${BFG_BIN_DIR}
	LIBRARY DESTINATION ${BFG_LIB_DIR}
	COMPONENT runtime
	ARCHIVE DESTINATION ${BFG_LIB_DIR}
	COMPONENT devel
)

IF(RELEASE)
	INSTALL(FILES ${Controller_HEADERS}
		DESTINATION "${BFG_PACKAGE_INCLUDE_DIR}"
		COMPONENT devel
	)
ENDIF()
