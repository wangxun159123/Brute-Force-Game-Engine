cmake_minimum_required(VERSION 2.6)

BFG_INIT_PACKAGE(Core)

FILE(GLOB Core_SOURCES *.cpp)
FILE(GLOB Core_HEADERS *.h *.hh)
FILE(GLOB Core_SCRIPTS *.xml)

INCLUDE_DIRECTORIES(${OGRE_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${BOOST_GEOMETRY_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${BoostLog_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${TINYXML_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PUGIXML_INCLUDE_DIR})
INCLUDE_DIRECTORIES(..)

LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
LINK_DIRECTORIES(${OPENAL_LIBRARY_DIR})

ADD_CUSTOM_TARGET(CoreEnums
	bfgEnumGen --input ${CMAKE_CURRENT_SOURCE_DIR}/Enums.xml
	           --header ${CMAKE_CURRENT_SOURCE_DIR}/Enums.hh
	           --source ${CMAKE_CURRENT_SOURCE_DIR}/Enums.cpp
	DEPENDS bfgEnumGen
)

ADD_DEFINITIONS(-DTIXML_USE_STL)

IF(WIN32)
	ADD_DEFINITIONS(-DCORE_EXPORTS)
ENDIF(WIN32)

SET(OUTPUT_NAME_DEBUG "bfgCored")

ADD_LIBRARY(bfgCore SHARED
	${Core_SOURCES}
	${Core_HEADERS}
	${Core_SCRIPTS}
)

SET_TARGET_PROPERTIES(bfgCore PROPERTIES OUTPUT_NAME_DEBUG "bfgCore_d")

TARGET_LINK_LIBRARIES(bfgCore
	${Boost_LIBRARIES}
	${BoostLog_LIBRARIES}
	bfgBase
	TinyXML
	${LIBPUGIXML_LIBRARIES}
)

ADD_DEPENDENCIES(bfgCore CoreEnums TinyXML)

INSTALL(TARGETS bfgCore
	RUNTIME DESTINATION ${BFG_BIN_DIR}
	LIBRARY DESTINATION ${BFG_LIB_DIR}
	COMPONENT runtime
	ARCHIVE DESTINATION ${BFG_LIB_DIR}
	COMPONENT devel
)

IF(RELEASE)
	INSTALL(FILES ${Core_HEADERS}
		DESTINATION ${BFG_PACKAGE_INCLUDE_DIR}
		COMPONENT devel
	)
ENDIF()
