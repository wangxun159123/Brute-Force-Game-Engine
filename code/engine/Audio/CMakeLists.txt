cmake_minimum_required(VERSION 2.6)

BFG_INIT_PACKAGE(Audio)

FILE(GLOB Audio_SOURCES *.cpp)
FILE(GLOB Audio_HEADERS *.h *.xml *.hh)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${BoostLog_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OPENAL_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${LIBSNDFILE_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${VORBIS_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OGG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(..)

ADD_CUSTOM_TARGET(AudioEnums
	bfgEnumGen --input ${CMAKE_CURRENT_SOURCE_DIR}/Enums.xml
	        --header ${CMAKE_CURRENT_SOURCE_DIR}/Enums.hh
	        --source ${CMAKE_CURRENT_SOURCE_DIR}/Enums.cpp
	DEPENDS bfgEnumGen
)

ADD_DEFINITIONS(-DAUDIO_EXPORTS)

IF(WIN32)
	ADD_DEFINITIONS(-DAUDIO_EXPORTS)
ENDIF(WIN32)

ADD_LIBRARY(bfgAudio SHARED
	${Audio_SOURCES}
	${Audio_HEADERS}
)

SET_TARGET_PROPERTIES(bfgAudio PROPERTIES OUTPUT_NAME_DEBUG "bfgAudio_d")

TARGET_LINK_LIBRARIES(bfgAudio
	${Boost_LIBRARIES}
	${LIBSNDFILE_LIBRARY}
	${VORBIS_LIBRARIES} 
	${VORBIS_FILE_LIBRARIES}
	${OGG_LIBRARIES}
	${OPENAL_LIBRARY}
	bfgCore
	bfgEventCore
)

ADD_DEPENDENCIES(bfgAudio AudioEnums)

INSTALL(TARGETS bfgAudio
	RUNTIME DESTINATION ${BFG_BIN_DIR}
	LIBRARY DESTINATION ${BFG_LIB_DIR}
	COMPONENT runtime
	ARCHIVE DESTINATION ${BFG_LIB_DIR}
	COMPONENT devel
)

IF(RELEASE)
	INSTALL(FILES ${Audio_HEADERS}
		DESTINATION "${BFG_PACKAGE_INCLUDE_DIR}"
		COMPONENT devel
	)
ENDIF()
