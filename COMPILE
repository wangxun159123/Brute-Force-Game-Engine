This file describes how to compile the Brute-Force Game Engine.

Dependencies
============

-> Windows
   -------

Download one of our dependency bundles at:

	https://forum.ultimatespaceproject.de/engine/bundles/win32

and put the content of \bin into the engine's \bin.

-> Debian / Ubuntu and derivates
   -----------------------------

Download one of our dependency bundles at:

	https://forum.ultimatespaceproject.de/engine/bundles/debian

If you can't find a package for your architecture please use our
make_bundle_deb.sh script and try to build the package yourself. The $ARCH
variable within the script must be manually changed in order to do this.

install it:

	sudo dpkg -i package.deb

now install further dependencies:

	sudo apt-get install -f

At the time of this writing Boost 1.47.0 is quite new and I'm unable to find a
debian package for it. This is why I included Boost within our dependency
package which will conflict with older versions of Boost.  

-> Other systems
   -------------

If you can't find a package for your environment you'll have to bite the
bullet: All dependencies must be compiled manually.

Take a look into our make_bundle_deb.sh script to see how we gathered all
dependencies together.

Compiling
=========

-> Linux
   -----

	mkdir build && cd build
	cmake .. && make

Note:
	* You might need the gcc compile flags `-m64' and `-fPIC' when
	  compiling for AMD64.

-> Windows
   -------

Best is to use the CMake-GUI. After configuration, point the CMake-Variable
BFG_DEPENDENCY_BUNDLE_PATH to the \bundle directory of the dependency package
mentioned above. Configurate again and if successful, generate the build. Then
open it and compile with your preferred IDE.

Installing
==========

In order to generate an installer there is a "package" build target. CPack will
generate a Debian package on Linux and a Nullsoft installer on Windows for the
currently chosen configuration.

On Windows, note that only one package may be installed at a time since the
registry entries get overwritten.

On Linux when generating a Debian package for the 'amd64'-architecture you must
append `-DAMD64=1' when invoking CMake. Depending on whether you use
`-DRELEASE=1' or not you'll get libbfe-dev or libbfe-dbg.

Resources
=========

It's possible to use the engine without media, but we wouldn't recommend this.
A simple media (resources) package to begin with can be downloaded at:

	https://forum.ultimatespaceproject.de/engine/resources

Extract the content right into this directory. You should have a "resources"
directory then, in the same directory along with "code" and "thirdparty". For
Linux a symlink will suffice.

Have fun.
